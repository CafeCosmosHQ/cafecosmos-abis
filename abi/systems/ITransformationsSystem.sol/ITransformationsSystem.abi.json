[
  {
    "type": "function",
    "name": "getTransformation",
    "inputs": [
      {
        "name": "base",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "input",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "tuple",
        "internalType": "struct TransformationsData",
        "components": [
          {
            "name": "next",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "yield",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "inputNext",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "yieldQuantity",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "unlockTime",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "timeout",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "timeoutYield",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "timeoutYieldQuantity",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "timeoutNext",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "isRecipe",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "isWaterCollection",
            "type": "bool",
            "internalType": "bool"
          },
          {
            "name": "xp",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "exists",
            "type": "bool",
            "internalType": "bool"
          }
        ]
      }
    ],
    "stateMutability": "nonpayable"
  }
]